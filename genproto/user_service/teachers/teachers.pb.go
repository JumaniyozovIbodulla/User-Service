// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: teachers.proto

package user_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{0}
}

type TeacherPrimaryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TeacherPrimaryKey) Reset() {
	*x = TeacherPrimaryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherPrimaryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherPrimaryKey) ProtoMessage() {}

func (x *TeacherPrimaryKey) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherPrimaryKey.ProtoReflect.Descriptor instead.
func (*TeacherPrimaryKey) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{1}
}

func (x *TeacherPrimaryKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName          string  `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Phone             string  `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Salary            float64 `protobuf:"fixed64,4,opt,name=salary,proto3" json:"salary,omitempty"`
	MonthsWorked      int32   `protobuf:"varint,5,opt,name=months_worked,json=monthsWorked,proto3" json:"months_worked,omitempty"`
	IeltsScore        float64 `protobuf:"fixed64,6,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttepmsCount int32   `protobuf:"varint,7,opt,name=ielts_attepms_count,json=ieltsAttepmsCount,proto3" json:"ielts_attepms_count,omitempty"`
	SupportTeacherId  string  `protobuf:"bytes,8,opt,name=support_teacher_id,json=supportTeacherId,proto3" json:"support_teacher_id,omitempty"`
	BranchId          string  `protobuf:"bytes,9,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	GroupId           string  `protobuf:"bytes,10,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *CreateTeacher) Reset() {
	*x = CreateTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeacher) ProtoMessage() {}

func (x *CreateTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeacher.ProtoReflect.Descriptor instead.
func (*CreateTeacher) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTeacher) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *CreateTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateTeacher) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateTeacher) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *CreateTeacher) GetMonthsWorked() int32 {
	if x != nil {
		return x.MonthsWorked
	}
	return 0
}

func (x *CreateTeacher) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *CreateTeacher) GetIeltsAttepmsCount() int32 {
	if x != nil {
		return x.IeltsAttepmsCount
	}
	return 0
}

func (x *CreateTeacher) GetSupportTeacherId() string {
	if x != nil {
		return x.SupportTeacherId
	}
	return ""
}

func (x *CreateTeacher) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *CreateTeacher) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type Teacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExtraId           string  `protobuf:"bytes,2,opt,name=extra_id,json=extraId,proto3" json:"extra_id,omitempty"`
	FullName          string  `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Phone             string  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Salary            float64 `protobuf:"fixed64,6,opt,name=salary,proto3" json:"salary,omitempty"`
	MonthsWorked      int32   `protobuf:"varint,7,opt,name=months_worked,json=monthsWorked,proto3" json:"months_worked,omitempty"`
	IeltsScore        float64 `protobuf:"fixed64,8,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttepmsCount int32   `protobuf:"varint,9,opt,name=ielts_attepms_count,json=ieltsAttepmsCount,proto3" json:"ielts_attepms_count,omitempty"`
	SupportTeacherId  string  `protobuf:"bytes,10,opt,name=support_teacher_id,json=supportTeacherId,proto3" json:"support_teacher_id,omitempty"`
	BranchId          string  `protobuf:"bytes,11,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	GroupId           string  `protobuf:"bytes,12,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	IsActive          int64   `protobuf:"varint,13,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt         string  `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Teacher) Reset() {
	*x = Teacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Teacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Teacher) ProtoMessage() {}

func (x *Teacher) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Teacher.ProtoReflect.Descriptor instead.
func (*Teacher) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{3}
}

func (x *Teacher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Teacher) GetExtraId() string {
	if x != nil {
		return x.ExtraId
	}
	return ""
}

func (x *Teacher) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Teacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Teacher) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Teacher) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *Teacher) GetMonthsWorked() int32 {
	if x != nil {
		return x.MonthsWorked
	}
	return 0
}

func (x *Teacher) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *Teacher) GetIeltsAttepmsCount() int32 {
	if x != nil {
		return x.IeltsAttepmsCount
	}
	return 0
}

func (x *Teacher) GetSupportTeacherId() string {
	if x != nil {
		return x.SupportTeacherId
	}
	return ""
}

func (x *Teacher) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *Teacher) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Teacher) GetIsActive() int64 {
	if x != nil {
		return x.IsActive
	}
	return 0
}

func (x *Teacher) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UpdateTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullName          string  `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Phone             string  `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Password          string  `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Salary            float64 `protobuf:"fixed64,4,opt,name=salary,proto3" json:"salary,omitempty"`
	MonthsWorked      int32   `protobuf:"varint,5,opt,name=months_worked,json=monthsWorked,proto3" json:"months_worked,omitempty"`
	IeltsScore        float64 `protobuf:"fixed64,6,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttepmsCount int32   `protobuf:"varint,7,opt,name=ielts_attepms_count,json=ieltsAttepmsCount,proto3" json:"ielts_attepms_count,omitempty"`
	SupportTeacherId  string  `protobuf:"bytes,8,opt,name=support_teacher_id,json=supportTeacherId,proto3" json:"support_teacher_id,omitempty"`
	BranchId          string  `protobuf:"bytes,9,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	GroupId           string  `protobuf:"bytes,10,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	IsActive          int64   `protobuf:"varint,11,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *UpdateTeacher) Reset() {
	*x = UpdateTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeacher) ProtoMessage() {}

func (x *UpdateTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeacher.ProtoReflect.Descriptor instead.
func (*UpdateTeacher) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTeacher) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UpdateTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateTeacher) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateTeacher) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *UpdateTeacher) GetMonthsWorked() int32 {
	if x != nil {
		return x.MonthsWorked
	}
	return 0
}

func (x *UpdateTeacher) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *UpdateTeacher) GetIeltsAttepmsCount() int32 {
	if x != nil {
		return x.IeltsAttepmsCount
	}
	return 0
}

func (x *UpdateTeacher) GetSupportTeacherId() string {
	if x != nil {
		return x.SupportTeacherId
	}
	return ""
}

func (x *UpdateTeacher) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *UpdateTeacher) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UpdateTeacher) GetIsActive() int64 {
	if x != nil {
		return x.IsActive
	}
	return 0
}

type GetListTeachersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetListTeachersRequest) Reset() {
	*x = GetListTeachersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListTeachersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTeachersRequest) ProtoMessage() {}

func (x *GetListTeachersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTeachersRequest.ProtoReflect.Descriptor instead.
func (*GetListTeachersRequest) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{5}
}

func (x *GetListTeachersRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetListTeachersRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListTeachersRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetListTeachersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int64      `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	Teachers []*Teacher `protobuf:"bytes,2,rep,name=Teachers,proto3" json:"Teachers,omitempty"`
}

func (x *GetListTeachersResponse) Reset() {
	*x = GetListTeachersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListTeachersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTeachersResponse) ProtoMessage() {}

func (x *GetListTeachersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTeachersResponse.ProtoReflect.Descriptor instead.
func (*GetListTeachersResponse) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{6}
}

func (x *GetListTeachersResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListTeachersResponse) GetTeachers() []*Teacher {
	if x != nil {
		return x.Teachers
	}
	return nil
}

var File_teachers_proto protoreflect.FileDescriptor

var file_teachers_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x23, 0x0a, 0x11, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd2, 0x02, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c,
	0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x65, 0x6c, 0x74, 0x73,
	0x5f, 0x61, 0x74, 0x74, 0x65, 0x70, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x70,
	0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xb3, 0x03,
	0x0a, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x70,
	0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x69, 0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x70, 0x6d, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xef, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65,
	0x70, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x70, 0x6d, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x5e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x5e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x73, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x08, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x73, 0x32, 0xc8, 0x02, 0x0a, 0x0e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x17, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x11, 0x2e, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x22, 0x00,
	0x12, 0x3b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x2e, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x11, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x73, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x22, 0x00, 0x12, 0x4f, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x20, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x1a, 0x11, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x1b, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x0f, 0x2e,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x42, 0x17, 0x5a, 0x15, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_teachers_proto_rawDescOnce sync.Once
	file_teachers_proto_rawDescData = file_teachers_proto_rawDesc
)

func file_teachers_proto_rawDescGZIP() []byte {
	file_teachers_proto_rawDescOnce.Do(func() {
		file_teachers_proto_rawDescData = protoimpl.X.CompressGZIP(file_teachers_proto_rawDescData)
	})
	return file_teachers_proto_rawDescData
}

var file_teachers_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_teachers_proto_goTypes = []interface{}{
	(*Empty)(nil),                   // 0: teachers.Empty
	(*TeacherPrimaryKey)(nil),       // 1: teachers.TeacherPrimaryKey
	(*CreateTeacher)(nil),           // 2: teachers.CreateTeacher
	(*Teacher)(nil),                 // 3: teachers.Teacher
	(*UpdateTeacher)(nil),           // 4: teachers.UpdateTeacher
	(*GetListTeachersRequest)(nil),  // 5: teachers.GetListTeachersRequest
	(*GetListTeachersResponse)(nil), // 6: teachers.GetListTeachersResponse
}
var file_teachers_proto_depIdxs = []int32{
	3, // 0: teachers.GetListTeachersResponse.Teachers:type_name -> teachers.Teacher
	2, // 1: teachers.TeacherService.Create:input_type -> teachers.CreateTeacher
	1, // 2: teachers.TeacherService.GetById:input_type -> teachers.TeacherPrimaryKey
	5, // 3: teachers.TeacherService.GetAll:input_type -> teachers.GetListTeachersRequest
	4, // 4: teachers.TeacherService.Update:input_type -> teachers.UpdateTeacher
	1, // 5: teachers.TeacherService.Delete:input_type -> teachers.TeacherPrimaryKey
	3, // 6: teachers.TeacherService.Create:output_type -> teachers.Teacher
	3, // 7: teachers.TeacherService.GetById:output_type -> teachers.Teacher
	6, // 8: teachers.TeacherService.GetAll:output_type -> teachers.GetListTeachersResponse
	3, // 9: teachers.TeacherService.Update:output_type -> teachers.Teacher
	0, // 10: teachers.TeacherService.Delete:output_type -> teachers.Empty
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_teachers_proto_init() }
func file_teachers_proto_init() {
	if File_teachers_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teachers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherPrimaryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Teacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListTeachersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListTeachersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teachers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teachers_proto_goTypes,
		DependencyIndexes: file_teachers_proto_depIdxs,
		MessageInfos:      file_teachers_proto_msgTypes,
	}.Build()
	File_teachers_proto = out.File
	file_teachers_proto_rawDesc = nil
	file_teachers_proto_goTypes = nil
	file_teachers_proto_depIdxs = nil
}
